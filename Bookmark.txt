javascript:(function()%7B%2F%2F %3D%3DUserScript%3D%3D%0A%2F%2F %40name         Return YouTube Dislike%0A%2F%2F %40namespace    https%3A%2F%2Fwww.returnyoutubedislike.com%2F%0A%2F%2F %40homepage     https%3A%2F%2Fwww.returnyoutubedislike.com%2F%0A%2F%2F %40version      3.0.1%0A%2F%2F %40encoding     utf-8%0A%2F%2F %40description  Return of the YouTube Dislike%2C Based off https%3A%2F%2Fwww.returnyoutubedislike.com%2F%0A%2F%2F %40icon         https%3A%2F%2Fgithub.com%2FAnarios%2Freturn-youtube-dislike%2Fraw%2Fmain%2FIcons%2FReturn%2520Youtube%2520Dislike%2520-%2520Transparent.png%0A%2F%2F %40author       Anarios %26 JRWR%0A%2F%2F %40match        *%3A%2F%2F*.youtube.com%2F*%0A%2F%2F %40exclude      *%3A%2F%2Fmusic.youtube.com%2F*%0A%2F%2F %40exclude      *%3A%2F%2F*.music.youtube.com%2F*%0A%2F%2F %40compatible   chrome%0A%2F%2F %40compatible   firefox%0A%2F%2F %40compatible   opera%0A%2F%2F %40compatible   safari%0A%2F%2F %40compatible   edge%0A%2F%2F %40downloadURL  https%3A%2F%2Fgithub.com%2FAnarios%2Freturn-youtube-dislike%2Fraw%2Fmain%2FExtensions%2FUserScript%2FReturn%2520Youtube%2520Dislike.user.js%0A%2F%2F %40updateURL    https%3A%2F%2Fgithub.com%2FAnarios%2Freturn-youtube-dislike%2Fraw%2Fmain%2FExtensions%2FUserScript%2FReturn%2520Youtube%2520Dislike.user.js%0A%2F%2F %40grant        GM.xmlHttpRequest%0A%2F%2F %40connect      youtube.com%0A%2F%2F %40grant        GM_addStyle%0A%2F%2F %40run-at       document-end%0A%2F%2F %3D%3D%2FUserScript%3D%3D%0A%0Aconst extConfig %3D %7B%0A  %2F%2F BEGIN USER OPTIONS%0A  %2F%2F You may change the following variables to allowed values listed in the corresponding brackets (* means default). Keep the style and keywords intact.%0A  showUpdatePopup%3A false%2C %2F%2F %5Btrue%2C false*%5D Show a popup tab after extension update (See what's new)%0A  disableVoteSubmission%3A false%2C %2F%2F %5Btrue%2C false*%5D Disable like%2Fdislike submission (Stops counting your likes and dislikes)%0A  coloredThumbs%3A false%2C %2F%2F %5Btrue%2C false*%5D Colorize thumbs (Use custom colors for thumb icons)%0A  coloredBar%3A false%2C %2F%2F %5Btrue%2C false*%5D Colorize ratio bar (Use custom colors for ratio bar)%0A  colorTheme%3A "classic"%2C %2F%2F %5Bclassic*%2C accessible%2C neon%5D Color theme (red%2Fgreen%2C blue%2Fyellow%2C pink%2Fcyan)%0A  numberDisplayFormat%3A "compactShort"%2C %2F%2F %5BcompactShort*%2C compactLong%2C standard%5D Number format (For non-English locale users%2C you may be able to improve appearance with a different option. Please file a feature request if your locale is not covered)%0A  numberDisplayRoundDown%3A true%2C %2F%2F %5Btrue*%2C false%5D Round down numbers (Show rounded down numbers)%0A  tooltipPercentageMode%3A "none"%2C %2F%2F %5Bnone*%2C dash_like%2C dash_dislike%2C both%2C only_like%2C only_dislike%5D Mode of showing percentage in like%2Fdislike bar tooltip.%0A  numberDisplayReformatLikes%3A false%2C %2F%2F %5Btrue%2C false*%5D Re-format like numbers (Make likes and dislikes format consistent)%0A  %2F%2F END USER OPTIONS%0A%7D%3B%0A%0Aconst LIKED_STATE %3D "LIKED_STATE"%3B%0Aconst DISLIKED_STATE %3D "DISLIKED_STATE"%3B%0Aconst NEUTRAL_STATE %3D "NEUTRAL_STATE"%3B%0Alet previousState %3D 3%3B %2F%2F1%3DLIKED%2C 2%3DDISLIKED%2C 3%3DNEUTRAL%0Alet likesvalue %3D 0%3B%0Alet dislikesvalue %3D 0%3B%0A%0Alet isMobile %3D location.hostname %3D%3D "m.youtube.com"%3B%0Alet isShorts %3D () %3D> location.pathname.startsWith("%2Fshorts")%3B%0Alet mobileDislikes %3D 0%3B%0Afunction cLog(text%2C subtext %3D "") %7B%0A  subtext %3D subtext.trim() %3D%3D%3D "" %3F "" %3A %60(%24%7Bsubtext%7D)%60%3B%0A  console.log(%60%5BReturn YouTube Dislikes%5D %24%7Btext%7D %24%7Bsubtext%7D%60)%3B%0A%7D%0A%0Afunction isInViewport(element) %7B%0A  const rect %3D element.getBoundingClientRect()%3B%0A  const height %3D innerHeight %7C%7C document.documentElement.clientHeight%3B%0A  const width %3D innerWidth %7C%7C document.documentElement.clientWidth%3B%0A  return (%0A    rect.top >%3D 0 %26%26%0A    rect.left >%3D 0 %26%26%0A    rect.bottom <%3D height %26%26%0A    rect.right <%3D width%0A  )%3B%0A%7D%0A%0Afunction getButtons() %7B%0A  if (isShorts()) %7B%0A    let elements %3D document.querySelectorAll(%0A      isMobile%0A        %3F "ytm-like-button-renderer"%0A        %3A "%23like-button > ytd-like-button-renderer"%0A    )%3B%0A    for (let element of elements) %7B%0A      if (isInViewport(element)) %7B%0A        return element%3B%0A      %7D%0A    %7D%0A  %7D%0A  if (isMobile) %7B%0A    return document.querySelector(".slim-video-action-bar-actions")%3B%0A  %7D%0A  if (document.getElementById("menu-container")%3F.offsetParent %3D%3D%3D null) %7B%0A    return document.querySelector("ytd-menu-renderer.ytd-watch-metadata > div")%3B%0A  %7D else %7B%0A    return document%0A      .getElementById("menu-container")%0A      %3F.querySelector("%23top-level-buttons-computed")%3B%0A  %7D%0A%7D%0A%0Afunction getLikeButton() %7B%0A  return getButtons().children%5B0%5D%3B%0A%7D%0A%0Afunction getDislikeButton() %7B%0A  return getButtons().children%5B1%5D%3B%0A%7D%0A%0Alet mutationObserver %3D new Object()%3B%0A%0Aif (isShorts() %26%26 mutationObserver.exists !%3D%3D true) %7B%0A  cLog("initializing mutation observer")%3B%0A  mutationObserver.options %3D %7B%0A    childList%3A false%2C%0A    attributes%3A true%2C%0A    subtree%3A false%2C%0A  %7D%3B%0A  mutationObserver.exists %3D true%3B%0A  mutationObserver.observer %3D new MutationObserver(function (%0A    mutationList%2C%0A    observer%0A  ) %7B%0A    mutationList.forEach((mutation) %3D> %7B%0A      if (%0A        mutation.type %3D%3D%3D "attributes" %26%26%0A        mutation.target.nodeName %3D%3D%3D "TP-YT-PAPER-BUTTON" %26%26%0A        mutation.target.id %3D%3D%3D "button"%0A      ) %7B%0A        cLog("Short thumb button status changed")%3B%0A        if (mutation.target.getAttribute("aria-pressed") %3D%3D%3D "true") %7B%0A          mutation.target.style.color %3D%0A            mutation.target.parentElement.parentElement.id %3D%3D%3D "like-button"%0A              %3F getColorFromTheme(true)%0A              %3A getColorFromTheme(false)%3B%0A        %7D else %7B%0A          mutation.target.style.color %3D "unset"%3B%0A        %7D%0A        return%3B%0A      %7D%0A      cLog(%0A        "unexpected mutation observer event%3A " %2B mutation.target %2B mutation.type%0A      )%3B%0A    %7D)%3B%0A  %7D)%3B%0A%7D%0A%0Afunction isVideoLiked() %7B%0A  if (isMobile) %7B%0A    return (%0A      getLikeButton().querySelector("button").getAttribute("aria-label") %3D%3D%0A      "true"%0A    )%3B%0A  %7D%0A  return getLikeButton().classList.contains("style-default-active")%3B%0A%7D%0A%0Afunction isVideoDisliked() %7B%0A  if (isMobile) %7B%0A    return (%0A      getDislikeButton().querySelector("button").getAttribute("aria-label") %3D%3D%0A      "true"%0A    )%3B%0A  %7D%0A  return getDislikeButton().classList.contains("style-default-active")%3B%0A%7D%0A%0Afunction isVideoNotLiked() %7B%0A  if (isMobile) %7B%0A    return !isVideoLiked()%3B%0A  %7D%0A  return getLikeButton().classList.contains("style-text")%3B%0A%7D%0A%0Afunction isVideoNotDisliked() %7B%0A  if (isMobile) %7B%0A    return !isVideoDisliked()%3B%0A  %7D%0A  return getDislikeButton().classList.contains("style-text")%3B%0A%7D%0A%0Afunction checkForUserAvatarButton() %7B%0A  if (isMobile) %7B%0A    return%3B%0A  %7D%0A  if (document.querySelector("%23avatar-btn")) %7B%0A    return true%3B%0A  %7D else %7B%0A    return false%3B%0A  %7D%0A%7D%0A%0Afunction getState() %7B%0A  if (isVideoLiked()) %7B%0A    return LIKED_STATE%3B%0A  %7D%0A  if (isVideoDisliked()) %7B%0A    return DISLIKED_STATE%3B%0A  %7D%0A  return NEUTRAL_STATE%3B%0A%7D%0A%0Afunction setLikes(likesCount) %7B%0A  if (isMobile) %7B%0A    getButtons().children%5B0%5D.querySelector(".button-renderer-text").innerText %3D%0A      likesCount%3B%0A    return%3B%0A  %7D%0A  getButtons().children%5B0%5D.querySelector("%23text").innerText %3D likesCount%3B%0A%7D%0A%0Afunction setDislikes(dislikesCount) %7B%0A  if (isMobile) %7B%0A    mobileDislikes %3D dislikesCount%3B%0A    return%3B%0A  %7D%0A  getButtons().children%5B1%5D.querySelector("%23text").innerText %3D dislikesCount%3B%0A%7D%0A%0Afunction getLikeCountFromButton() %7B%0A  if (isShorts()) %7B%0A    %2F%2FYoutube Shorts don't work with this query. It's not nessecary%3B we can skip it and still see the results.%0A    %2F%2FIt should be possible to fix this function%2C but it's not critical to showing the dislike count.%0A    return false%3B%0A  %7D%0A  let likesStr %3D getLikeButton()%0A    .querySelector("yt-formatted-string%23text")%0A    .getAttribute("aria-label")%0A    .replace(%2F%5CD%2Fg%2C "")%3B%0A  return likesStr.length > 0 %3F parseInt(likesStr) %3A false%3B%0A%7D%0A%0A(typeof GM_addStyle !%3D "undefined"%0A  %3F GM_addStyle%0A  %3A (styles) %3D> %7B%0A      let styleNode %3D document.createElement("style")%3B%0A      styleNode.type %3D "text%2Fcss"%3B%0A      styleNode.innerText %3D styles%3B%0A      document.head.appendChild(styleNode)%3B%0A    %7D)(%60%0A    %23return-youtube-dislike-bar-container %7B%0A      background%3A var(--yt-spec-icon-disabled)%3B%0A      border-radius%3A 2px%3B%0A    %7D%0A%0A    %23return-youtube-dislike-bar %7B%0A      background%3A var(--yt-spec-text-primary)%3B%0A      border-radius%3A 2px%3B%0A      transition%3A all 0.15s ease-in-out%3B%0A    %7D%0A%0A    .ryd-tooltip %7B%0A      position%3A relative%3B%0A      display%3A block%3B%0A      height%3A 2px%3B%0A      top%3A 9px%3B%0A    %7D%0A%0A    .ryd-tooltip-bar-container %7B%0A      width%3A 100%25%3B%0A      height%3A 2px%3B%0A      position%3A absolute%3B%0A      padding-top%3A 6px%3B%0A      padding-bottom%3A 28px%3B%0A      top%3A -6px%3B%0A    %7D%0A  %60)%3B%0A%0Afunction createRateBar(likes%2C dislikes) %7B%0A  if (isMobile) %7B%0A    return%3B%0A  %7D%0A  let rateBar %3D document.getElementById("return-youtube-dislike-bar-container")%3B%0A%0A  const widthPx %3D%0A    getButtons().children%5B0%5D.clientWidth %2B%0A    getButtons().children%5B1%5D.clientWidth %2B%0A    8%3B%0A%0A  const widthPercent %3D%0A    likes %2B dislikes > 0 %3F (likes %2F (likes %2B dislikes)) * 100 %3A 50%3B%0A%0A  var likePercentage %3D parseFloat(widthPercent.toFixed(1))%3B%0A  const dislikePercentage %3D (100 - likePercentage).toLocaleString()%3B%0A  likePercentage %3D likePercentage.toLocaleString()%3B%0A%0A  var tooltipInnerHTML%3B%0A  switch (extConfig.tooltipPercentageMode) %7B%0A    case "dash_like"%3A%0A      tooltipInnerHTML %3D %60%24%7Blikes.toLocaleString()%7D%26nbsp%3B%2F%26nbsp%3B%24%7Bdislikes.toLocaleString()%7D%26nbsp%3B%26nbsp%3B-%26nbsp%3B%26nbsp%3B%24%7BlikePercentage%7D%25%60%3B%0A      break%3B%0A    case "dash_dislike"%3A%0A      tooltipInnerHTML %3D %60%24%7Blikes.toLocaleString()%7D%26nbsp%3B%2F%26nbsp%3B%24%7Bdislikes.toLocaleString()%7D%26nbsp%3B%26nbsp%3B-%26nbsp%3B%26nbsp%3B%24%7BdislikePercentage%7D%25%60%3B%0A      break%3B%0A    case "both"%3A%0A      tooltipInnerHTML %3D %60%24%7BlikePercentage%7D%25%26nbsp%3B%2F%26nbsp%3B%24%7BdislikePercentage%7D%25%60%3B%0A      break%3B%0A    case "only_like"%3A%0A      tooltipInnerHTML %3D %60%24%7BlikePercentage%7D%25%60%3B%0A      break%3B%0A    case "only_dislike"%3A%0A      tooltipInnerHTML %3D %60%24%7BdislikePercentage%7D%25%60%3B%0A      break%3B%0A    default%3A%0A      tooltipInnerHTML %3D %60%24%7Blikes.toLocaleString()%7D%26nbsp%3B%2F%26nbsp%3B%24%7Bdislikes.toLocaleString()%7D%60%3B%0A  %7D%0A%0A  if (!rateBar %26%26 !isMobile) %7B%0A    let colorLikeStyle %3D ""%3B%0A    let colorDislikeStyle %3D ""%3B%0A    if (extConfig.coloredBar) %7B%0A      colorLikeStyle %3D "%3B background-color%3A " %2B getColorFromTheme(true)%3B%0A      colorDislikeStyle %3D "%3B background-color%3A " %2B getColorFromTheme(false)%3B%0A    %7D%0A%0A    document.getElementById("menu-container").insertAdjacentHTML(%0A      "beforeend"%2C%0A      %60%0A        <div class%3D"ryd-tooltip" style%3D"width%3A %24%7BwidthPx%7Dpx">%0A        <div class%3D"ryd-tooltip-bar-container">%0A           <div%0A              id%3D"return-youtube-dislike-bar-container"%0A              style%3D"width%3A 100%25%3B height%3A 2px%3B%24%7BcolorDislikeStyle%7D"%0A              >%0A              <div%0A                 id%3D"return-youtube-dislike-bar"%0A                 style%3D"width%3A %24%7BwidthPercent%7D%25%3B height%3A 100%25%24%7BcolorDislikeStyle%7D"%0A                 ><%2Fdiv>%0A           <%2Fdiv>%0A        <%2Fdiv>%0A        <tp-yt-paper-tooltip position%3D"top" id%3D"ryd-dislike-tooltip" class%3D"style-scope ytd-sentiment-bar-renderer" role%3D"tooltip" tabindex%3D"-1">%0A           <!--css-build%3Ashady-->%24%7BtooltipInnerHTML%7D%0A        <%2Ftp-yt-paper-tooltip>%0A        <%2Fdiv>%0A%60%0A    )%3B%0A  %7D else %7B%0A    document.getElementById(%0A      "return-youtube-dislike-bar-container"%0A    ).style.width %3D widthPx %2B "px"%3B%0A    document.getElementById("return-youtube-dislike-bar").style.width %3D%0A      widthPercent %2B "%25"%3B%0A%0A    document.querySelector("%23ryd-dislike-tooltip > %23tooltip").innerHTML %3D%0A      tooltipInnerHTML%3B%0A%0A    if (extConfig.coloredBar) %7B%0A      document.getElementById(%0A        "return-youtube-dislike-bar-container"%0A      ).style.backgroundColor %3D getColorFromTheme(false)%3B%0A      document.getElementById(%0A        "return-youtube-dislike-bar"%0A      ).style.backgroundColor %3D getColorFromTheme(true)%3B%0A    %7D%0A  %7D%0A%7D%0A%0Afunction setState() %7B%0A  cLog("Fetching votes...")%3B%0A  let statsSet %3D false%3B%0A%0A  fetch(%0A    %60https%3A%2F%2Freturnyoutubedislikeapi.com%2Fvotes%3FvideoId%3D%24%7BgetVideoId()%7D%60%0A  ).then((response) %3D> %7B%0A    response.json().then((json) %3D> %7B%0A      if (json %26%26 !("traceId" in response) %26%26 !statsSet) %7B%0A        const %7B dislikes%2C likes %7D %3D json%3B%0A        cLog(%60Received count%3A %24%7Bdislikes%7D%60)%3B%0A        likesvalue %3D likes%3B%0A        dislikesvalue %3D dislikes%3B%0A        setDislikes(numberFormat(dislikes))%3B%0A        if (extConfig.numberDisplayReformatLikes %3D%3D%3D true) %7B%0A          const nativeLikes %3D getLikeCountFromButton()%3B%0A          if (nativeLikes !%3D%3D false) %7B%0A            setLikes(numberFormat(nativeLikes))%3B%0A          %7D%0A        %7D%0A        createRateBar(likes%2C dislikes)%3B%0A        if (extConfig.coloredThumbs %3D%3D%3D true) %7B%0A          if (isShorts()) %7B%0A            %2F%2F for shorts%2C leave deactived buttons in default color%0A            let shortLikeButton %3D getLikeButton().querySelector(%0A              "tp-yt-paper-button%23button"%0A            )%3B%0A            let shortDislikeButton %3D getDislikeButton().querySelector(%0A              "tp-yt-paper-button%23button"%0A            )%3B%0A            if (shortLikeButton.getAttribute("aria-pressed") %3D%3D%3D "true") %7B%0A              shortLikeButton.style.color %3D getColorFromTheme(true)%3B%0A            %7D%0A            if (shortDislikeButton.getAttribute("aria-pressed") %3D%3D%3D "true") %7B%0A              shortDislikeButton.style.color %3D getColorFromTheme(false)%3B%0A            %7D%0A            mutationObserver.observer.observe(%0A              shortLikeButton%2C%0A              mutationObserver.options%0A            )%3B%0A            mutationObserver.observer.observe(%0A              shortDislikeButton%2C%0A              mutationObserver.options%0A            )%3B%0A          %7D else %7B%0A            getLikeButton().style.color %3D getColorFromTheme(true)%3B%0A            getDislikeButton().style.color %3D getColorFromTheme(false)%3B%0A          %7D%0A        %7D%0A      %7D%0A    %7D)%3B%0A  %7D)%3B%0A%7D%0A%0Afunction likeClicked() %7B%0A  if (checkForUserAvatarButton() %3D%3D true) %7B%0A    if (previousState %3D%3D 1) %7B%0A      likesvalue--%3B%0A      createRateBar(likesvalue%2C dislikesvalue)%3B%0A      setDislikes(numberFormat(dislikesvalue))%3B%0A      previousState %3D 3%3B%0A    %7D else if (previousState %3D%3D 2) %7B%0A      likesvalue%2B%2B%3B%0A      dislikesvalue--%3B%0A      setDislikes(numberFormat(dislikesvalue))%3B%0A      createRateBar(likesvalue%2C dislikesvalue)%3B%0A      previousState %3D 1%3B%0A    %7D else if (previousState %3D%3D 3) %7B%0A      likesvalue%2B%2B%3B%0A      createRateBar(likesvalue%2C dislikesvalue)%3B%0A      previousState %3D 1%3B%0A    %7D%0A    if (extConfig.numberDisplayReformatLikes %3D%3D%3D true) %7B%0A      const nativeLikes %3D getLikeCountFromButton()%3B%0A      if (nativeLikes !%3D%3D false) %7B%0A        setLikes(numberFormat(nativeLikes))%3B%0A      %7D%0A    %7D%0A  %7D%0A%7D%0A%0Afunction dislikeClicked() %7B%0A  if (checkForUserAvatarButton() %3D%3D true) %7B%0A    if (previousState %3D%3D 3) %7B%0A      dislikesvalue%2B%2B%3B%0A      setDislikes(numberFormat(dislikesvalue))%3B%0A      createRateBar(likesvalue%2C dislikesvalue)%3B%0A      previousState %3D 2%3B%0A    %7D else if (previousState %3D%3D 2) %7B%0A      dislikesvalue--%3B%0A      setDislikes(numberFormat(dislikesvalue))%3B%0A      createRateBar(likesvalue%2C dislikesvalue)%3B%0A      previousState %3D 3%3B%0A    %7D else if (previousState %3D%3D 1) %7B%0A      likesvalue--%3B%0A      dislikesvalue%2B%2B%3B%0A      setDislikes(numberFormat(dislikesvalue))%3B%0A      createRateBar(likesvalue%2C dislikesvalue)%3B%0A      previousState %3D 2%3B%0A      if (extConfig.numberDisplayReformatLikes %3D%3D%3D true) %7B%0A        const nativeLikes %3D getLikeCountFromButton()%3B%0A        if (nativeLikes !%3D%3D false) %7B%0A          setLikes(numberFormat(nativeLikes))%3B%0A        %7D%0A      %7D%0A    %7D%0A  %7D%0A%7D%0A%0Afunction setInitialState() %7B%0A  setState()%3B%0A%7D%0A%0Afunction getVideoId() %7B%0A  const urlObject %3D new URL(window.location.href)%3B%0A  const pathname %3D urlObject.pathname%3B%0A  if (pathname.startsWith("%2Fclip")) %7B%0A    return document.querySelector("meta%5Bitemprop%3D'videoId'%5D").content%3B%0A  %7D else %7B%0A    if (pathname.startsWith("%2Fshorts")) %7B%0A      return pathname.slice(8)%3B%0A    %7D%0A    return urlObject.searchParams.get("v")%3B%0A  %7D%0A%7D%0A%0Afunction isVideoLoaded() %7B%0A  if (isMobile) %7B%0A    return document.getElementById("player").getAttribute("loading") %3D%3D "false"%3B%0A  %7D%0A  const videoId %3D getVideoId()%3B%0A%0A  return (%0A    document.querySelector(%60ytd-watch-flexy%5Bvideo-id%3D'%24%7BvideoId%7D'%5D%60) !%3D%3D null%0A  )%3B%0A%7D%0A%0Afunction roundDown(num) %7B%0A  if (num < 1000) return num%3B%0A  const int %3D Math.floor(Math.log10(num) - 2)%3B%0A  const decimal %3D int %2B (int %25 3 %3F 1 %3A 0)%3B%0A  const value %3D Math.floor(num %2F 10 ** decimal)%3B%0A  return value * 10 ** decimal%3B%0A%7D%0A%0Afunction numberFormat(numberState) %7B%0A  let numberDisplay%3B%0A  if (extConfig.numberDisplayRoundDown %3D%3D%3D false) %7B%0A    numberDisplay %3D numberState%3B%0A  %7D else %7B%0A    numberDisplay %3D roundDown(numberState)%3B%0A  %7D%0A  return getNumberFormatter(extConfig.numberDisplayFormat).format(%0A    numberDisplay%0A  )%3B%0A%7D%0A%0Afunction getNumberFormatter(optionSelect) %7B%0A  let userLocales%3B%0A  if (document.documentElement.lang) %7B%0A    userLocales %3D document.documentElement.lang%3B%0A  %7D else if (navigator.language) %7B%0A    userLocales %3D navigator.language%3B%0A  %7D else %7B%0A    try %7B%0A      userLocales %3D new URL(%0A        Array.from(document.querySelectorAll("head > link%5Brel%3D'search'%5D"))%0A          %3F.find((n) %3D> n%3F.getAttribute("href")%3F.includes("%3Flocale%3D"))%0A          %3F.getAttribute("href")%0A      )%3F.searchParams%3F.get("locale")%3B%0A    %7D catch %7B%0A      cLog(%0A        "Cannot find browser locale. Use en as default for number formatting."%0A      )%3B%0A      userLocales %3D "en"%3B%0A    %7D%0A  %7D%0A%0A  let formatterNotation%3B%0A  let formatterCompactDisplay%3B%0A  switch (optionSelect) %7B%0A    case "compactLong"%3A%0A      formatterNotation %3D "compact"%3B%0A      formatterCompactDisplay %3D "long"%3B%0A      break%3B%0A    case "standard"%3A%0A      formatterNotation %3D "standard"%3B%0A      formatterCompactDisplay %3D "short"%3B%0A      break%3B%0A    case "compactShort"%3A%0A    default%3A%0A      formatterNotation %3D "compact"%3B%0A      formatterCompactDisplay %3D "short"%3B%0A  %7D%0A%0A  const formatter %3D Intl.NumberFormat(userLocales%2C %7B%0A    notation%3A formatterNotation%2C%0A    compactDisplay%3A formatterCompactDisplay%2C%0A  %7D)%3B%0A  return formatter%3B%0A%7D%0A%0Afunction getColorFromTheme(voteIsLike) %7B%0A  let colorString%3B%0A  switch (extConfig.colorTheme) %7B%0A    case "accessible"%3A%0A      if (voteIsLike %3D%3D%3D true) %7B%0A        colorString %3D "dodgerblue"%3B%0A      %7D else %7B%0A        colorString %3D "gold"%3B%0A      %7D%0A      break%3B%0A    case "neon"%3A%0A      if (voteIsLike %3D%3D%3D true) %7B%0A        colorString %3D "aqua"%3B%0A      %7D else %7B%0A        colorString %3D "magenta"%3B%0A      %7D%0A      break%3B%0A    case "classic"%3A%0A    default%3A%0A      if (voteIsLike %3D%3D%3D true) %7B%0A        colorString %3D "lime"%3B%0A      %7D else %7B%0A        colorString %3D "red"%3B%0A      %7D%0A  %7D%0A  return colorString%3B%0A%7D%0A%0Afunction setEventListeners(evt) %7B%0A  let jsInitChecktimer%3B%0A%0A  function checkForJS_Finish() %7B%0A    console.log()%3B%0A    if (isShorts() %7C%7C (getButtons()%3F.offsetParent %26%26 isVideoLoaded())) %7B%0A      const buttons %3D getButtons()%3B%0A%0A      if (!window.returnDislikeButtonlistenersSet) %7B%0A        cLog("Registering button listeners...")%3B%0A        try %7B%0A          buttons.children%5B0%5D.addEventListener("click"%2C likeClicked)%3B%0A          buttons.children%5B1%5D.addEventListener("click"%2C dislikeClicked)%3B%0A          buttons.children%5B0%5D.addEventListener("touchstart"%2C likeClicked)%3B%0A          buttons.children%5B1%5D.addEventListener("touchstart"%2C dislikeClicked)%3B%0A        %7D catch %7B%0A          return%3B%0A        %7D %2F%2FDon't spam errors into the console%0A        window.returnDislikeButtonlistenersSet %3D true%3B%0A      %7D%0A      setInitialState()%3B%0A      clearInterval(jsInitChecktimer)%3B%0A    %7D%0A  %7D%0A%0A  cLog("Setting up...")%3B%0A  jsInitChecktimer %3D setInterval(checkForJS_Finish%2C 111)%3B%0A%7D%0A%0A(function () %7B%0A  "use strict"%3B%0A  window.addEventListener("yt-navigate-finish"%2C setEventListeners%2C true)%3B%0A  setEventListeners()%3B%0A%7D)()%3B%0Aif (isMobile) %7B%0A  let originalPush %3D history.pushState%3B%0A  history.pushState %3D function (...args) %7B%0A    window.returnDislikeButtonlistenersSet %3D false%3B%0A    setEventListeners(args%5B2%5D)%3B%0A    return originalPush.apply(history%2C args)%3B%0A  %7D%3B%0A  setInterval(() %3D> %7B%0A    getDislikeButton().querySelector(".button-renderer-text").innerText %3D%0A      mobileDislikes%3B%0A  %7D%2C 1000)%3B%0A%7D%7D)()%3B
